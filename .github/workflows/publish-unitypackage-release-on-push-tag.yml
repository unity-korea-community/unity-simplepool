name: release

on:
  push:
    tags:
      - '*'

env:
  # Require unity test
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2019.3.8f1

  # require release

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.SRC_BRANCH }}
          lfs: true

      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      # 예전 버전으로 하면 라이센스 인증이 안됨.. 그래서 동작하는 알파로 변경
      - uses: game-ci/unity-test-runner@v2.0-alpha-4 # https://github.com/marketplace/actions/unity-test-runner
        id: tests
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          unityVersion: ${{ env.UNITY_VERSION }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

  release:
    needs: testAllModes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # https://github.com/battila7/get-version-action
      - id: get_version
        uses: battila7/get-version-action@v2

      - run: |
          find **/*.meta
          find **/*.meta > metalist

      # https://github.com/pCYSl5EDgo/create-unitypackage
      - uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: ${{ github.repository.name }}-${{ steps.get_version.outputs.version }}.unitypackage
          include-files: metalist

      - uses: actions/upload-artifact@master
        with:
          path: /
          name: package

      # https://github.com/marketplace/actions/git-release
      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: |
            ${{ github.repository }}.unitypackage

name: CI_Documentation

on:
  push:
    branches:
      - workspace

jobs:
  # Build the documentation
  build:
    runs-on: windows-latest # Required by DocFX
    # available list of containers here:
    # https://hub.docker.com/r/unityci/editor/tags?page=1&ordering=last_updated&name=ubuntu-2020.1.17f1-base
    container: unityci/editor:2021.1.10f1-windows-mono-0

    steps:
      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit

      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   submodules: true
      - name: Cache Library
        id: cache-library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2020.1.17

      - name: Install DocFX
        run: choco install -y docfx

      - name: Use README.md as index.md
        run: |
          cp Packages/${{ github.event.repository.name }}/README.md Documentation/index.md

      # csproj 생성
      - name: Generate Solution
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName $PROJECT_NAME -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit

      - name: Build
        run: docfx Documentation/docfx.json

      # Upload the generated documentation
      - name: Upload site artifact
        uses: actions/upload-artifact@v1
        with:
          name: _site
          path: _site # Must equals the 'build.dest' value on your docfx.json

  # Deploy the generated documentation to the gh-pages branch
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   submodules: true

      # Download the generated documentation
      - name: Download site artifact
        uses: actions/download-artifact@v1
        with:
          name: _site

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site
